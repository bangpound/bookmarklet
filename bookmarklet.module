<?php
// $Id$
/**
 * @file bookmarklet.module
 * TODO: Enter file description here.
 */

/**
 * Implementation of hook_init().
 */
function bookmarklet_init() {
  if (isset($_REQUEST['bookmarklet'])) {
    $GLOBALS['modalframe_page_template'] = TRUE;
    $module_path = drupal_get_path('module', 'modalframe');
    drupal_add_css($module_path .'/css/modalframe.child.css');
  }
}

/**
 * Implementation of hook_block().
 */
function bookmarklet_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
      $blocks[0]['info'] = t('Bookmarklet');
      return $blocks;

    case 'view':
      if ($delta == 0) {
        $block['subject'] = t('Bookmarklet');
        $block['content'] = theme('bookmarklet', 'Post on '. variable_get('site_name', 'Drupal'), bookmarklet_script());
      }

      return $block;
  }
}

/**
 * Implementation of hook_form_alter().
 */
function bookmarklet_form_alter(&$form, $form_state, $form_id) {
  if (isset($_REQUEST['bookmarklet']) && isset($form['type']) && isset($form['#node']) && ($form_id == $form['type']['#value'] .'_node_form')) {

    // Recurse through all children.
    _bookmarklet_form_alter($form, $form_state, $form_id);

    // Definitely shrink the body field.
    if (!empty($form['body_field'])) {
      $form['body_field']['body']['#rows'] = 5;
    }
  }
}

function _bookmarklet_form_alter(&$elements, $form_state, $form_id) {
  foreach (element_children($elements) as $key) {
    if (isset($elements[$key]) && $elements[$key]) {
      if (in_array($key, array('body_field', 'field_link', 'buttons'))) {
        continue;
      }

      // Only worry about form elements that have UI.
      if (isset($elements[$key]['#type']) && in_array($elements[$key]['#type'], array('value', 'hidden'))) {
        continue;
      }

      // Recurse through all children.
      _bookmarklet_form_alter($elements[$key], $form_state, $form_id);

      // Only worry about form elements the user can access.
      if (!isset($elements[$key]['#access']) || $elements[$key]['#access']) {
        if (!isset($elements[$key]['#required']) || !$elements[$key]['#required']) {
          $elements[$key]['#access'] = FALSE;
        }
      }
    }
  }
}

/**
 * Implementation of hook_theme().
 */
function bookmarklet_theme($existing, $type, $theme, $path) {
  return array(
    'bookmarklet' => array(
      'arguments' => array(
        'text' => '',
        'script' => '',
        'options' => array(),
      ),
    ),
  );
}

/**
 * Theme the bookmarklet link.
 *
 * Takes the same arguments as l() but deliberately side steps the XSS security
 * filter because our goal is XSS.
 */
function theme_bookmarklet($text = '', $script = '', $options = array()) {
  $options['absolute'] = TRUE;
  $decoy = 'http://BOOKMARKLET';
  $link = l($text, $decoy, $options);
  $script = 'javascript:'. trim($script);
  return str_replace($decoy, $script, $link);
}

function bookmarklet_script() {
  global $base_url;
  $path = drupal_get_path('module', 'bookmarklet');
  $labjs = drupal_get_path('module', 'bookmarklet');

  // jslint
  /* global DRUPAL_BOOKMARKLET_HOST,$,drupalBookmarklet,L,Math */
  $script = <<<EOT
// TODO load bookmarklet script once even if clicked multiple times.
var drupalBookmarklet = drupalBookmarklet || function() {};
(function () {
  var d,b;
  d = drupalBookmarklet;
  d.host = '$base_url';
  d.path = '$path';
  b = d.bookmarklet = document.createElement('SCRIPT');
  b.type = 'text/javascript';
  b.src = d.host + '/' + d.path + '/bookmarklet.js'; // ?' + (Math.random());
  document.getElementsByTagName('head')[0].appendChild(b);
}());
EOT;
  module_load_include('php', 'bookmarklet', 'jsmin-php/jsmin');

  return JSMin::minify($script);
}
